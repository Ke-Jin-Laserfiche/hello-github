# This is a basic workflow to help you get started with Actions

name: publish

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      isProduction:
        description: 'production build'
        type: boolean
        required: true
        default: 'false'
env:
  isProduction: 'false'
  MAJOR_VERSION: 1
  MINOR_VERSION: 0
  PATCH_VERSION: 5


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: preview
    
    env: 
      isProduction: ${{ github.event.inputs.isProduction }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Echo event
        run: echo ${{github.event.inputs}}
        
      - name: Echo build number
        run: echo ${{github.run_id}}

      - name: Echo workflow input isProduction
        run: echo ${{ env.isProduction }}
        
      - name: set up variable -- NpmPackageVersion
        if: ${{ env.isProduction == 'true'}}
        run: echo "NpmPackageVersion=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ env.PATCH_VERSION }}" >> $GITHUB_ENV
        
      - name: set up variable -- NpmPackageVersion
        if: ${{ env.isProduction  == 'false'}}
        run: echo "NpmPackageVersion=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ env.PATCH_VERSION }}--preview-${{ github.run_id }}" >> $GITHUB_ENV


      - name: npm version
        run: npm version ${{ env.NpmPackageVersion }} --no-git-tag-version
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_REGISTRY: ${{ secrets.NPM_REGISTRY }}

      - name: npm install
        run: npm install

      - name: npm build
        run: npm run build

      # - name: gulp replaceImportsInIndex
      #   run: gulp replaceImportsInIndex
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: npm-publish-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ./dist    

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: npm-publish-packagejson
          # A file, directory or wildcard pattern that describes what to upload
          path: ./package.json    
    
      - name: npm publish
        run: npm publish  --access public --tag next
        if: ${{ env.isProduction == 'false'}}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_REGISTRY: ${{ secrets.NPM_REGISTRY }}


  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: production
    env:
      isProduction: ${{ github.event.inputs.isProduction }}
    if: ${{  github.event.inputs.isProduction == 'true'}}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: npm-publish-artifact
          path: ./

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: npm-publish-packagejson
          path: ./

      - name: Echo workflow input isProduction
        run: echo ${{ env.isProduction }}

      # - name: npm publish
      #   run: npm publish  --access public --tag latest
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
      #     NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
      #     NPM_REGISTRY: ${{ secrets.NPM_REGISTRY }}
